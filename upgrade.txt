COMPASS UPGRADE DOCUMENTATION (Please see Compass JIRA for a complete change-log)
================================================================================

VERSION 0.9.0 ()
================

1. Package name changed back to org.compass from org.compassframework.
   Due to the move to Open Symphony, the name Compass is back, without the Framework part.
2. DTD Location changed.
   http://static.compassframework.org/dtd/ prefix should now state: http://www.opensymphony.com/compass/dtd.
3. Converters Support Enhancements and Changes.
   a) Removed converter-param from all the different mapping definitions in the Compass Core DTD.
   b) The converter element no longer points to an implementation class of the Converter class. Instead, it
      acts as a lookup name for a Converter (which was registered under the name).
   c) Since the converter-param was mostly used for formatting Dates and Numbers, the format attribute was
      added to the DTD, allowing for quick setting of the format, without going through the hassle of 
      defining a new Converter and registering it. Note, that it must be set only on formatting converters.
   c) Old way of registering new converters still works (CompassConfiguration#registerConverter).
   d) You can now configure new converters using Compass configuration settings. The converter setting is
      compass.converter.[converter name].[settings]. For example, to register a new DateConverter, two settings
      must be set, compass.converter.mydate.type=date, and compass.converter.mydate.format=yyyy-MM-dd. Now,
      you can use the mydate converter lookup name in the converter mapping attribute.
   e) You can now override default converters that comes with compass. They are registered under Compass
      default names. For example, to change the format for all Dates, simply provide the setting
      compass.converter.date.format=yyyy-MM-dd.
   For more information, please check the reference documentation.
4. Component and Reference mapping ref-alias is no longer required. Under certain conditions, Compass can infer
   the class mapping associated with the class property return type.

VERSION 0.8.1 (Jan 22, 2006)
============================

None.

VERSION 0.8.0 (Jan 02, 2006)
============================

1. Spring Transaction Manager.
   If using compass with a spring transaction manager (and probably using SpringSyncTransactionFactory),
   the transaction manager must be injected to the LocalCompassBean.
   The transactionManager property was removed from the CompassIndexController and CompassSearchController,
   now there is only one place to define the transactionManager that compass will integrate with, and that
   is the transactionManager of the LocalCompassBean.
2. CompassGps index Operation.
   When performing the index operation, it is very important in the new version NOT to perform it within an
   already running transaction. For LocalTransactionFactory, no outer LocalTransaction should be started.
   For JTATransactionFactory, no JTA transaction must be started, or no CMT transaction defined for the method
   level. For SpringSyncTransactionFactory, no spring transaction should be started before, and the executing
   method should not be wrapped with a transaction (using transaction proxy).

VERSION 0.7.0 (Dec 22, 2005)
============================

1. Actual Index directory moved to index sub directory.
   If specifying a file system location for the index, the sub indexes will be created under a directory
   called index (within the configured path). If you wish to use the same index from version 0.6.2, it is
   possible, but you will need to manually create the index directory, and move all the other directories
   into it.


VERSION 0.6.2 (Nov 22, 2005)
============================

1. Index control moved from Compass.
   A new interface called SearchEngineIndexManager will now handle all index related operations (like
   delete, verify). It is reachable from the Compass instance.
2. Minor API change in CompassDetachedHits.
   The toHits, toDatas, and toResources, were change and the to part was changed to get, for simpler usage
   in scripting langs (or JSP's).
3. CompassGps index functionality changed.
   CompassGps no longer has the deleteIndexBeforeIndex property, the two implementation will now gracefully
   replace the online index with the content of the index operation. Please consult the documentation for
   more information.

VERSION 0.6.1 (Sep 30, 2005)
============================

1. The mapping definition name excludeFromAll is changed to exclude-from-all.
2. The mapping definition name managedId is changed to managed-id.
3. CompassQueryBuilder#eq changed to CompassQueryBuilder#term
4. CompassQueryBuilder#eqAlias changed to CompassQueryBuilder#alias
5. CompassHits refactored to CompassHitsOperations, CompassHits and CompassDetachedHits. A better separation
   between the notion of hits (CompassHits) which can be used within a transactional context, and detached
   hits (CompassDetachedHits), that can be used outside of a transactional context. The CompassHitsOperations
   interface is used for operations that can be done on both hits. Also, several method were renamed/removed
   as per the general contract of hits (i.e. getScore(int n) removed and only score(int n) left).
6. The setting compass.engine.optimizer changed to compass.engine.optimizer.type.


VERSION 0.6 (Sep 30, 2005)
==========================

1. Package name changed from org.compass to org.compassframework.
2. DTD location changed to http://static.compassframework.org/dtd/compass-core-mapping-1.0.dtd.
3. The settings for the analyzer used was changed. Compass can now be configured with multiple
   analyzers, and they can be referenced. The new setting looks like: compass.analyzer.(analyzer name).*,
   with two internal analyzers called default and search. Please read more at the Search Analyzer section
   in the documentation.
4. Removed the DefaultCompassGps, which had two compass instances with the confusing names of compass
   and batchCompass. There will be two implementation of CompassGps now: a) DualCompassGps: Will act the
   same as DefaultCompassGps, but will have better names for the two compass instances: indexCompass and
   mirrorCompass. b) SingleCompassGps: Based on the fact that 0.6 version allows to set the transaction
   isolation when starting a new transaction, it will only have a single Compass instance. When indexing,
   the transaction will begin with the batch_insert transaction isolation, and when mirroring, using the
   configured transaction isolation. It is a simpler solution which should work in most cases, and have
   better memory performance.

VERSION 0.5
===========

None.

VERSION 0.4
===========

Intial release